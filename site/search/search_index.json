{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deploying Apereo CAS Deploying Apereo CAS provides step-by-step instructions for setting up Apereo CAS 6 with a goal of deploying and maintaining both CAS and the application server (Tomcat) via Ansible. The goal of this is to make deploying and maintaining CAS and Tomcat easy. The documentation is based on the documentation for CAS 5 created by David Curry of The New School . It is meant to supplement, not replace, the documentation created by Apereo for CAS. This is my first foray into using Github pages, or making documentation for deploying an application like this (my documentation has either been end user facing or for internal staff up until now) - so apologies for any rough edges on it. It's horribly incomplete as of now but my goal is to document as I deploy into test and later into production. It was created in my work at the State University of New York at New Paltz but I wanted to give back to the CAS community for the great information I've found from the New School and others. Copyright and Licensing Documentation Content All documentation content is Copyright \u00a9 2021, SUNY New Paltz. It is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License . Site Template This site was created with MkDocs using the Material Theme . Author Information Paul Chauvet Information Security Officer State University of New York at New Paltz chauvetp@newpaltz.edu","title":"Main"},{"location":"#deploying-apereo-cas","text":"Deploying Apereo CAS provides step-by-step instructions for setting up Apereo CAS 6 with a goal of deploying and maintaining both CAS and the application server (Tomcat) via Ansible. The goal of this is to make deploying and maintaining CAS and Tomcat easy. The documentation is based on the documentation for CAS 5 created by David Curry of The New School . It is meant to supplement, not replace, the documentation created by Apereo for CAS. This is my first foray into using Github pages, or making documentation for deploying an application like this (my documentation has either been end user facing or for internal staff up until now) - so apologies for any rough edges on it. It's horribly incomplete as of now but my goal is to document as I deploy into test and later into production. It was created in my work at the State University of New York at New Paltz but I wanted to give back to the CAS community for the great information I've found from the New School and others.","title":"Deploying Apereo CAS"},{"location":"#copyright-and-licensing","text":"","title":"Copyright and Licensing"},{"location":"#documentation-content","text":"All documentation content is Copyright \u00a9 2021, SUNY New Paltz. It is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Documentation Content"},{"location":"#site-template","text":"This site was created with MkDocs using the Material Theme .","title":"Site Template"},{"location":"#author-information","text":"Paul Chauvet Information Security Officer State University of New York at New Paltz chauvetp@newpaltz.edu","title":"Author Information"},{"location":"about/about-new-paltz/","text":"Our history What is now the State University of New York at New Paltz has existed in some form in New Paltz, NY since 1828. It was originally the New Paltz Classic school, later a state normal school that trained teahcers for New York State public schools, and an official four-year college in 1938 as the State Teachers College at New Paltz. It was one of the founding schools of the SUNY system in 1948. Today, the State University of New York at New Paltz covers 216 acres and includes the College of Liberal Arts & Sciences, the School of Business, the School of Science & Engineering, the School of Fine & Performing Arts, the School of Education, and The Graduate School. Over time, the curricular mission of the school has broadened from the nearly single-track of the Normal School to 143 programs in six schools. For more information, visit www.newpaltz.edu .","title":"About this project"},{"location":"about/about-new-paltz/#our-history","text":"What is now the State University of New York at New Paltz has existed in some form in New Paltz, NY since 1828. It was originally the New Paltz Classic school, later a state normal school that trained teahcers for New York State public schools, and an official four-year college in 1938 as the State Teachers College at New Paltz. It was one of the founding schools of the SUNY system in 1948. Today, the State University of New York at New Paltz covers 216 acres and includes the College of Liberal Arts & Sciences, the School of Business, the School of Science & Engineering, the School of Fine & Performing Arts, the School of Education, and The Graduate School. Over time, the curricular mission of the school has broadened from the nearly single-track of the Normal School to 143 programs in six schools. For more information, visit www.newpaltz.edu .","title":"Our history"},{"location":"about/architecture/","text":"System/Architecture Overview Components This document was created to reflect the environment in use at New Paltz for CAS: * Apereo CAS 6.2.x * Red Hat Enterprise Linux 8 * Apache Tomcat 9.0.x * Apache httpd * Ansible * Azure Active Directory * Microsoft Active Directory * Duo for Multifactor authentication * Hazelcast Ticket Registry for ticket storage between systems. If you want to use another version of CAS 6.x - it may or may not have significant changes. I'll be moving from CAS 6.2 to 6.3 and will document any issues as I come across them, at least in our environment. If you are going to use another operating system, web server, or java servlet container, I'd imagine the CAS portion of the instructions will be relatively similar - though the Ansible deployments for Tomcat may be less similar or useful. Design We have three levels of CAS here at New Paltz, Production, Test, and Development. Test is used for non-production applications that still need SSO (for example Banner test). Development is exclusively used for building, and testing, new versions or configuration changes for CAS. Authentication will be against either: * On-prem Active Directory (for alumni) * Azure Active Directory (for active faculty/staff/students, and retirees) * (we may eventually have all alumni in Azure - but that's for a later date. For now - they are only on-prem and really are only kept active for a couple systems) In each case - the hosts sit behind a load balancer (in our case, F5 Big IP, though HA Proxy or basically any other load balancer should work. We're not doing anything crazy at the LB level). For New Paltz, hostnames are something like: * cas6dev1.newpaltz.edu * cas6dev2.newpaltz.edu * with a load balanced URL of casdev.newpaltz.edu The load balancer is split in multiple locations, as are the application servers. This gives us resilience if a single site on-campus is down but does NOT give resilience against a full outage on-campus. This is one reason why we are looking to have as many services as possible authenticate directly against Azure instead of CAS. Using CAS to delegate authentication to Azure, we can make this transition as streamlined as possible.","title":"Architecture/design"},{"location":"about/architecture/#systemarchitecture-overview","text":"","title":"System/Architecture Overview"},{"location":"about/architecture/#components","text":"This document was created to reflect the environment in use at New Paltz for CAS: * Apereo CAS 6.2.x * Red Hat Enterprise Linux 8 * Apache Tomcat 9.0.x * Apache httpd * Ansible * Azure Active Directory * Microsoft Active Directory * Duo for Multifactor authentication * Hazelcast Ticket Registry for ticket storage between systems. If you want to use another version of CAS 6.x - it may or may not have significant changes. I'll be moving from CAS 6.2 to 6.3 and will document any issues as I come across them, at least in our environment. If you are going to use another operating system, web server, or java servlet container, I'd imagine the CAS portion of the instructions will be relatively similar - though the Ansible deployments for Tomcat may be less similar or useful.","title":"Components"},{"location":"about/architecture/#design","text":"We have three levels of CAS here at New Paltz, Production, Test, and Development. Test is used for non-production applications that still need SSO (for example Banner test). Development is exclusively used for building, and testing, new versions or configuration changes for CAS. Authentication will be against either: * On-prem Active Directory (for alumni) * Azure Active Directory (for active faculty/staff/students, and retirees) * (we may eventually have all alumni in Azure - but that's for a later date. For now - they are only on-prem and really are only kept active for a couple systems) In each case - the hosts sit behind a load balancer (in our case, F5 Big IP, though HA Proxy or basically any other load balancer should work. We're not doing anything crazy at the LB level). For New Paltz, hostnames are something like: * cas6dev1.newpaltz.edu * cas6dev2.newpaltz.edu * with a load balanced URL of casdev.newpaltz.edu The load balancer is split in multiple locations, as are the application servers. This gives us resilience if a single site on-campus is down but does NOT give resilience against a full outage on-campus. This is one reason why we are looking to have as many services as possible authenticate directly against Azure instead of CAS. Using CAS to delegate authentication to Azure, we can make this transition as streamlined as possible.","title":"Design"},{"location":"about/author-information/","text":"This documentation was created by: Paul Chauvet, CISSP Information Security Officer State University of New York at New Paltz chauvetp@newpaltz.edu The author would like to thank all those who contributed to this - whether via their public documentation, forum posts on the Apereo CAS forums, or directly via email. This includes David Curry of the New School, David Warden and Shawn Plummer of SUNY Geneseo , Ken Runyon of SUNY System Administration , Matt Adkins of Liberty University , David Campman of Forsyte IT , and all the developers who have contributed to the Apereo CAS project and who contribute in the CAS Community .","title":"About the author"}]}